<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="tv.mta.flutter_playout_example">

    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!-- permissions required for Akamai Media Analytics library -->
    <!-- 1. Allows library to open network sockets -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <!-- 2. Allows library to access information about networks to capture network state of user -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- 3. Allows library to access information about Wi-Fi networks for users connected via Wi-Fi -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!-- 4. Allows library to read phone features in order to create an ID for each user.
        Note: Defaults to Android ID if permission is not granted. -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <!-- 5. Allows library to report latitude and longitude based on cellLocation using GPS provider -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- 6. Allows library to report latitude and longitude based on cellLocation using network provider -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here. -->
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:label="flutter_playout_example"
        android:icon="@mipmap/ic_launcher">
        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme). -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
    </application>
</manifest>
